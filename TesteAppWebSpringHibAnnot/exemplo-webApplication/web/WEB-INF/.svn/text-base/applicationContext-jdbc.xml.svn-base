<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN//EN" "http://www.springframework.org/dtd/spring-beans.dtd">
<beans default-autowire="byName" default-lazy-init="false">

	<!--
		========================================================================
														  Hoepers - S.A Tecnocob
		========================================================================
		Arquivo  : applicationContext-jdbc.xml
		Data     : 15.01.2007
		Autor    : Cássio Dias
		Descrição: Este arquivo possui somente as configurações de acesso ao 
		banco de dados da aplicação.
		========================================================================
	-->
		
	<!-- Carrega o arquivo de propriedades para configuração JDBC -->
	<bean id="propertyConfigurer" 
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location" value="/WEB-INF/jdbc.properties"/>
	</bean>

	<!-- 
		Simple local DataSource that works in any environment.
		This uses the JDBC DriverManager to obtain connections, and does NOT perform connection
		pooling. Connection pooling is essential to all real-world applications.
		This definition is good for getting started, as it introduces no dependencies beyond
		the JDK, but DriverManagerDataSource is not intended for production usage.
	 -->
	<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="${jdbc.driverClassName}"/>
		<property name="url" value="${jdbc.url}"/>
		<property name="username" value="${jdbc.username}"/>
		<property name="password" value="${jdbc.password}"/>
	</bean>
	
	<!-- Configuração de DATA_SOURCE via JNDI NAME (ex. OC4J) -->	
	<!--bean id="dataSource" class="org.springframework.jndi.JndiObjectFactoryBean">
        <property name="jndiName" value="jdbc/CoreDS"/>
    </bean-->
	
</beans>